        /*Jordan elimination*/
        for (k = size - 1; k > 0; --k){
        //# pragma omp parallel for private(i) shared(k, size, Au, index, X) \
	//reduction(-: temp)
            for (i = k - 1; i >= 0; --i ){
                temp = Au[index[i]][k] / Au[index[k]][k];
                Au[index[i]][k] -= temp * Au[index[k]][k];
                Au[index[i]][size] -= temp * Au[index[k]][size];
            } 
        }
